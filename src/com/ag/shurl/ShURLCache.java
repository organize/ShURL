package com.ag.shurl;

import java.util.HashMap;
import java.util.Map;

/**
 * Encapsulates a simple map that acts as a cache for any GET/POST requests the main servlet recieves.
 * @author A. Wallin
 * @date 8/2/15
 */

public class ShURLCache {
	
	/**
	 * The main cache instance, where the key is a unique identifier generated by {@code ShURLEncode.encode(String, Int)}
	 */
	private Map<String, String> cache;
	
	public ShURLCache() {
		this.cache = new HashMap<String, String>();
	}
	
	/**
	 * Caches the string given in the parameter to a map.
	 * @param urlString, the url to shorten from POST /shorten to cache.
	 * @return uid, the unique index given to the {@code urlString} string.
	 */
	public String put(String urlString) {
		String uid = ShURLEncode.generateUniqueIndex(urlString, cache.size() + 1);
		cache.put(uid, urlString);
		return uid;
	}
	
	/**
	 * Returns the url that the {@code uid} corresponds.
	 * @param uid, the unique index for an url.
	 * @return url corresponding this uid as a string.
	 */
	public String get(String uid) {
		return cache.get(uid);
	}
}
